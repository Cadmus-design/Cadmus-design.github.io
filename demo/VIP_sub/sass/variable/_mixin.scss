// mixin ------------------------------------------------------------------------------------------
// usage  @include border-radius(.2rem);
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

//usage @include background-image("header.png", center);
$path--rel: "./assets/images";

@mixin background-image($img, $background-position) {
  background-image: url('#{$path--rel}/#{$img}');
  background-repeat: no-repeat;
  background-position: $background-position;
}

// usage  @include respond-to('尺寸(ex:sm,xs..)')
$breakpoints: ('ss': (max-width: 359px),
'xs': (max-width: 480px),
'sm': (max-width: 576px),
'md': (max-width: 768px),
'lg': (max-width: 992px),
'xl': (max-width: 1200px)) !default;

@mixin respond-to($breakpoint) {

  @if map-has-key($breakpoints,
  $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "+"Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// usage @include no-select();
@mixin no-select() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// usage @include icon()
@mixin icon($name, $width, $height, $background-size, $vertical-align, $img) {
  .icon {
    display: inline-flex;
    align-items: center;

    &.#{$name} {
      background-image: url('#{$path--rel}/#{$img}');
      background-repeat: no-repeat;
      background-size: $background-size;
      width: $width;
      height: $height;
      vertical-align: $vertical-align;
      @content;
    }
  }

}

@mixin after() {
  &:after {
    content: '';
    position: absolute;
    display: block;
    top: 0;
    left: 0;
  }
}

@mixin before() {
  &:before {
    content: '';
    position: absolute;
    display: block;
    top: 0;
    left: 0;
  }
}
@mixin keyframes ($animation_name: fowards) {
  @-webkit-keyframes #{$animation_name} {
    @content;
  }

  @-moz-keyframes #{$animation_name} {
    @content;
  }

  @-ms-keyframes #{$animation_name} {
    @content;
  }

  @keyframes #{$animation_name} {
    @content;
  }
}

@mixin animation ($delay, $duration, $animation, $iteration-count: forward, $direction: forward, $fillmode: fowards) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-iteration-count: $iteration-count;
  -webkit-animation-fill-mode: $fillmode;
  -webkit-animation-direction: $direction;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz--animation-iteration-count: $iteration-count;
  -moz-animation-fill-mode: $fillmode;
  -moz-animation-direction: $direction;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-iteration-count: $iteration-count;
  animation-fill-mode: $fillmode;
  animation-direction: $direction;
}